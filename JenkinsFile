pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'mvn clean package'
      }
    }
    stage ('Sonar Scan'){
      steps {
          withSonarQubeEnv('sonar') {
          sh 'mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=salapmap_devops'
          }
      }
    }
    stage('Quality Gates') {
      steps {
          timeout(time: 1, unit: 'HOURS') {
              script {
                  def qg = waitForQualityGate()
                  if (qg.status != 'OK') {
                      error "Pipeline aborted due to quality gate failure: ${qg.status}"
                    }
                }
            }
        }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "0914818516/ultimate-cicd-pipeline:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
            sh 'docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://registry.hub.docker.com', "docker-cred") {
                dockerImage.push()
            }
        }
      }
    }
    
    stage('Scan Docker Image with Trivy') {
      environment {
        DOCKER_IMAGE = "0914818516/ultimate-cicd-pipeline:${BUILD_NUMBER}"
      }
      steps {
          // Chạy Trivy để quét hình ảnh
          sh 'apt update -y'
      }
    }
    
    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "CICDdevops"
            GIT_USER_NAME = "TranNhatMinh23"
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "trannhatminh23082001@gmail.com"
                    git config user.name "TranNhatMinh23"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" deployment.yml
                    sed -i "s/image:.*/image: 0914818516\\/ultimate-cicd-pipeline:${BUILD_NUMBER}/" deployment.yml
                    git add deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }
    }
  }
}
